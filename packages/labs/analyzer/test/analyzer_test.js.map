{"version":3,"file":"analyzer_test.js","sourceRoot":"","sources":["../src/test/analyzer_test.ts"],"names":[],"mappings":"AAAA;;;;GAIG;AAEH,OAAO,EAAC,IAAI,EAAC,MAAM,KAAK,CAAC;AACzB,OAAO,KAAK,MAAM,MAAM,YAAY,CAAC;AACrC,OAAO,EAAE,MAAM,YAAY,CAAC;AAC5B,OAAO,KAAK,IAAI,MAAM,MAAM,CAAC;AAC7B,OAAO,EAAC,aAAa,EAAC,MAAM,KAAK,CAAC;AAElC,OAAO,EAAC,QAAQ,EAAC,MAAM,oBAAoB,CAAC;AAE5C,IAAI,CAAC,+BAA+B,EAAE,GAAG,EAAE;IACzC,MAAM,wBAAwB,GAAG,aAAa,CAC5C,IAAI,GAAG,CAAC,8BAA8B,EAAE,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,IAAI,CAC9D,CAAC;IACF,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,wBAAwB,CAAC,CAAC;IACxD,MAAM,aAAa,GAAG,QAAQ,CAAC,OAAO,CAAC,gBAAgB,EAAE,CAAC;IAC1D,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;IAEtC,MAAM,YAAY,GAAG,IAAI,CAAC,OAAO,CAC/B,wBAAwB,EACxB,kBAAkB,CACnB,CAAC;IACF,MAAM,UAAU,GAAG,QAAQ,CAAC,OAAO,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;IAChE,MAAM,CAAC,EAAE,CAAC,UAAU,CAAC,CAAC;IAEtB,MAAM,mBAAmB,GAAG,UAAU,CAAC,UAAU,CAAC,IAAI,CACpD,CAAC,CAAC,EAAE,EAAE,CAAC,EAAE,CAAC,kBAAkB,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,EAAE,OAAO,EAAE,KAAK,UAAU,CACpE,CAAC;IACF,MAAM,CAAC,EAAE,CAAC,mBAAmB,CAAC,CAAC;IAE/B,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,YAAY,CAAC,mBAAmB,CAAC,EAAE,IAAI,CAAC,CAAC;AACjE,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,GAAG,EAAE,CAAC","sourcesContent":["/**\n * @license\n * Copyright 2022 Google LLC\n * SPDX-License-Identifier: BSD-3-Clause\n */\n\nimport {test} from 'uvu';\nimport * as assert from 'uvu/assert';\nimport ts from 'typescript';\nimport * as path from 'path';\nimport {fileURLToPath} from 'url';\n\nimport {Analyzer} from '../lib/analyzer.js';\n\ntest('Basic elements - isLitElement', () => {\n  const basicElementsPackagePath = fileURLToPath(\n    new URL('../test-files/basic-elements', import.meta.url).href\n  );\n  const analyzer = new Analyzer(basicElementsPackagePath);\n  const rootFileNames = analyzer.program.getRootFileNames();\n  assert.equal(rootFileNames.length, 2);\n\n  const elementAPath = path.resolve(\n    basicElementsPackagePath,\n    'src/element-a.ts'\n  );\n  const sourceFile = analyzer.program.getSourceFile(elementAPath);\n  assert.ok(sourceFile);\n\n  const elementADeclaration = sourceFile.statements.find(\n    (s) => ts.isClassDeclaration(s) && s.name?.getText() === 'ElementA'\n  );\n  assert.ok(elementADeclaration);\n\n  assert.equal(analyzer.isLitElement(elementADeclaration), true);\n});\n\ntest.run();\n"]}